<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($scope, $window) {
    var c = this;

    // Initialize c.data.events 
    c.data.events = c.data.events || [];

    // Function to show event details in modal
    c.showDetails = function (event) {
        c.selectedEvent = event;
        $('#eventDetailsModal').modal('show');
    };

    // Function to donate money (redirect to Just Giving URL)
    c.donateMoney = function (justGivingUrl) {
        if (justGivingUrl) {
            $window.open(justGivingUrl, '_blank');
        }
    };

    // Function to donate item (placeholder for redirection logic)
    c.donateItem = function (event) {
     
        console.log('Redirect to donate item form for event:', event);
    };

  
    if (c.data) {
        $scope.contentItems = c.data.events;
    }

   
    var destroyWidgetWatcher = $scope.$watch(
        function () {
            return $("[widget='widget'][sn-atf-area='Events List']").length;
        },
        function (newValue, oldValue) {
            if (newValue !== oldValue) {
              
                console.log('Widget presence changed');
                destroyWidgetWatcher();
            }
        }
    );

    // Function to update events 
    // $scope.updateEvents = function () {
    //    
    // };

    // Modal functionality using Bootstrap modal
    $('#eventDetailsModal').on('hidden.bs.modal', function () {
        // Clear selected event when modal is closed
        c.selectedEvent = null;
    });
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>body {
  font-family: 'Roboto', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f7f9fc;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}



.head{
    color: #3382a3;
    font-size: 60px;
  text-align: center;
    margin: 50px;

}


.head2{
    text-align: center;
    font-size: 33px;
  color:black;
}

.events-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 20px;
}

.event-card {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  transition: transform 0.3s, box-shadow 0.3s;
  cursor: pointer;
  height: 500px;
}

.event-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.event-card img {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.event-details {
  padding: 30px;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.event-title {
  font-size: 24px;
  margin-bottom: 15px;
  color: #333;
  font-weight: bold;
}

.event-manager,
.event-dates div,
.event-status {
  font-size: 16px;
  color: #555;
  margin-bottom: 10px;
}

.event-dates div {
  display: flex;
  justify-content: space-between;
}

.event-status {
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 15px;
}

.event-new {
  color: #3498db; /* Blue for new events */
}

.event-upcoming {
  color: #f39c12; /* Orange for upcoming events */
}

.event-in-progress {
  color: #27ae60; /* Green for in-progress events */
}

.event-completed {
  color: #e74c3c; /* Red for completed events */
}

.event-canceled {
  color: #7f8c8d; /* Gray for canceled events */
}

.add-to-options {
  display: flex;
  justify-content: center;
}

.btn-secondary {
  background-color: #428bca;
  color: #fff;
  border: none;
  padding: 12px 20px;
  font-size: 16px;
  cursor: pointer;
  border-radius: 8px;
  margin-top: 20px;
  transition: background-color 0.3s, box-shadow 0.3s;
}

.btn-secondary:hover {
  background-color: #fc9f50
}

.imgFix {
  width: 100%;
}

.imgC {
  display: flex;
  justify-content: center;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color</field_list>
        <has_preview>true</has_preview>
        <id>event_list_2</id>
        <internal>false</internal>
        <link><![CDATA[function link($scope, $element, $attrs) {
    // Example additional setup in link function if needed
    // $element and $attrs can be used for DOM manipulation or attribute access
    
    // Example: Watch for changes on data.events
    $scope.$watchCollection('c.data.events', function(newEvents, oldEvents) {
        if (newEvents !== oldEvents) {
            console.log('Events updated:', newEvents);
            // Additional logic if needed when events change
        }
    });
}
]]></link>
        <name>Event list 2</name>
        <option_schema>[{"name":"show_star_rating","default_value":"Use system properties","section":"Presentation","label":"Show star rating","type":"choice","choices":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"},{"label":"Use system properties","value":"Use system properties"}]},{"hint":"Number of articles to display per page","name":"limit_article","section":"other","default_value":"10","label":"Number of articles to display per page","type":"integer"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {
    // Initialize an array to hold the events
    data.events = [];

    // Define the table name for events (assuming events table name)
    var tableName = 'x_1383184_charityb_events'; 

    // Create a new GlideRecord object
    var gr = new GlideRecord(tableName);
    if (gr.isValid()) {
        gr.query();

        // Loop through each record and add it to the events array
        while (gr.next()) {
            var eventManagerName = '';
            if (gr.event_manager) {
                var managerGr = new GlideRecord('sys_user');
                if (managerGr.get(gr.event_manager)) {
                    eventManagerName = managerGr.getValue('name');
                }
            }

            var startDate = gr.getValue('start_date');
            var endDate = gr.getValue('end_date');
            var status = gr.getValue('event_status');
            var image = gr.getDisplayValue('image');
            var charityCompany = gr.getValue('charity_company');
            var description = gr.getValue('description');
            var testimonials = gr.getValue('testimonial');
            var justGivingUrl = gr.getValue('just_giving_url');

            data.events.push({
                event_name: gr.getValue('event_name'),
                event_manager: eventManagerName,
                start_date: startDate,
                end_date: endDate,
                status: status,
                image: image,
                charity_company: charityCompany,
                description: description,
                testimonials: testimonials,
                just_giving_url: justGivingUrl
            });
        }
    } else {
        gs.error('Invalid table name: ' + tableName);
    }

})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>lalitha</sys_created_by>
        <sys_created_on>2024-06-13 06:56:49</sys_created_on>
        <sys_id>2db06d859332c21094e3f15a7bba10e4</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Event list 2</sys_name>
        <sys_package display_value="CharityBids" source="x_1383184_charityb">bcaeeadb9369421094e3f15a7bba1090</sys_package>
        <sys_policy/>
        <sys_scope display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</sys_scope>
        <sys_update_name>sp_widget_2db06d859332c21094e3f15a7bba10e4</sys_update_name>
        <sys_updated_by>lalitha</sys_updated_by>
        <sys_updated_on>2024-06-18 07:25:09</sys_updated_on>
        <template><![CDATA[<div class="container">
  <h1 class="head">Campaigns we love</h1>
  <h2 class="head2">
    Building Bridges, One Event at a Time
  </h2>
  <div id="events-grid" class="events-grid">
    <div ng-repeat="event in c.data.events" class="event-card">
      <a ng-href="#/event-details/{{event.id}}" class="event-link">
        <img ng-src="{{event.image || 'https://dev203498.service-now.com/logo%20image.jpg'}}" alt="{{event.event_name}}">
        <div class="event-details">
          <div class="event-title">{{event.event_name}}</div>
          <div class="event-manager">Event Manager: {{event.event_manager}}</div>
          <div class="event-dates">
            <div>Start Date: {{event.start_date}}</div>
            <div>End Date: {{event.end_date}}</div>
          </div>
          <div class="event-status"
               ng-class="{
                 'event-new': event.status === 'new',
                 'event-upcoming': event.status === 'upcoming',
                 'event-in-progress': event.status === 'in progress',
                 'event-completed': event.status === 'completed',
                 'event-canceled': event.status === 'canceled'
               }">
            Status: {{event.status}}
          </div>
        </div>
      </a>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</application>
        <file_path/>
        <instance_id>f0f392a5dbd2fd9cebdd2a59139619bb</instance_id>
        <instance_name>dev203498</instance_name>
        <name>sp_widget_2db06d859332c21094e3f15a7bba10e4</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[api.controller = function ($scope, $window) {
    var c = this;

    // Initialize c.data.events 
    c.data.events = c.data.events || [];

    // Function to show event details in modal
    c.showDetails = function (event) {
        c.selectedEvent = event;
        $('#eventDetailsModal').modal('show');
    };

    // Function to donate money (redirect to Just Giving URL)
    c.donateMoney = function (justGivingUrl) {
        if (justGivingUrl) {
            $window.open(justGivingUrl, '_blank');
        }
    };

    // Function to donate item (placeholder for redirection logic)
    c.donateItem = function (event) {
     
        console.log('Redirect to donate item form for event:', event);
    };

  
    if (c.data) {
        $scope.contentItems = c.data.events;
    }

   
    var destroyWidgetWatcher = $scope.$watch(
        function () {
            return $("[widget='widget'][sn-atf-area='Events List']").length;
        },
        function (newValue, oldValue) {
            if (newValue !== oldValue) {
              
                console.log('Widget presence changed');
                destroyWidgetWatcher();
            }
        }
    );

    // Function to update events 
    // $scope.updateEvents = function () {
    //    
    // };

    // Modal functionality using Bootstrap modal
    $('#eventDetailsModal').on('hidden.bs.modal', function () {
        // Clear selected event when modal is closed
        c.selectedEvent = null;
    });
};
]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;body {
  font-family: 'Roboto', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f7f9fc;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}



.head{
    color: #3382a3;
    font-size: 60px;
  text-align: center;
    margin: 50px;

}


.head2{
    text-align: center;
    font-size: 33px;
  color:black;
}

.events-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 20px;
}

.event-card {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  transition: transform 0.3s, box-shadow 0.3s;
  cursor: pointer;
  height: 500px;
}

.event-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.event-card img {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.event-details {
  padding: 30px;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.event-title {
  font-size: 24px;
  margin-bottom: 15px;
  color: #333;
  font-weight: bold;
}

.event-manager,
.event-dates div,
.event-status {
  font-size: 16px;
  color: #555;
  margin-bottom: 10px;
}

.event-dates div {
  display: flex;
  justify-content: space-between;
}

.event-status {
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 15px;
}

.event-new {
  color: #3498db; /* Blue for new events */
}

.event-upcoming {
  color: #f39c12; /* Orange for upcoming events */
}

.event-in-progress {
  color: #27ae60; /* Green for in-progress events */
}

.event-completed {
  color: #e74c3c; /* Red for completed events */
}

.event-canceled {
  color: #7f8c8d; /* Gray for canceled events */
}

.add-to-options {
  display: flex;
  justify-content: center;
}

.btn-secondary {
  background-color: #428bca;
  color: #fff;
  border: none;
  padding: 12px 20px;
  font-size: 16px;
  cursor: pointer;
  border-radius: 8px;
  margin-top: 20px;
  transition: background-color 0.3s, box-shadow 0.3s;
}

.btn-secondary:hover {
  background-color: #fc9f50
}

.imgFix {
  width: 100%;
}

.imgC {
  display: flex;
  justify-content: center;
}
&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;color&lt;/field_list&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;event_list_2&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link($scope, $element, $attrs) {
    // Example additional setup in link function if needed
    // $element and $attrs can be used for DOM manipulation or attribute access
    
    // Example: Watch for changes on data.events
    $scope.$watchCollection('c.data.events', function(newEvents, oldEvents) {
        if (newEvents !== oldEvents) {
            console.log('Events updated:', newEvents);
            // Additional logic if needed when events change
        }
    });
}
]]&gt;&lt;/link&gt;&lt;name&gt;Event list 2&lt;/name&gt;&lt;option_schema&gt;[{"name":"show_star_rating","default_value":"Use system properties","section":"Presentation","label":"Show star rating","type":"choice","choices":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"},{"label":"Use system properties","value":"Use system properties"}]},{"hint":"Number of articles to display per page","name":"limit_article","section":"other","default_value":"10","label":"Number of articles to display per page","type":"integer"}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function () {
    // Initialize an array to hold the events
    data.events = [];

    // Define the table name for events (assuming events table name)
    var tableName = 'x_1383184_charityb_events'; 

    // Create a new GlideRecord object
    var gr = new GlideRecord(tableName);
    if (gr.isValid()) {
        gr.query();

        // Loop through each record and add it to the events array
        while (gr.next()) {
            var eventManagerName = '';
            if (gr.event_manager) {
                var managerGr = new GlideRecord('sys_user');
                if (managerGr.get(gr.event_manager)) {
                    eventManagerName = managerGr.getValue('name');
                }
            }

            var startDate = gr.getValue('start_date');
            var endDate = gr.getValue('end_date');
            var status = gr.getValue('event_status');
            var image = gr.getDisplayValue('image');
            var charityCompany = gr.getValue('charity_company');
            var description = gr.getValue('description');
            var testimonials = gr.getValue('testimonial');
            var justGivingUrl = gr.getValue('just_giving_url');

            data.events.push({
                event_name: gr.getValue('event_name'),
                event_manager: eventManagerName,
                start_date: startDate,
                end_date: endDate,
                status: status,
                image: image,
                charity_company: charityCompany,
                description: description,
                testimonials: testimonials,
                just_giving_url: justGivingUrl
            });
        }
    } else {
        gs.error('Invalid table name: ' + tableName);
    }

})();
]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;lalitha&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-06-13 06:56:49&lt;/sys_created_on&gt;&lt;sys_id&gt;2db06d859332c21094e3f15a7bba10e4&lt;/sys_id&gt;&lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;&lt;sys_name&gt;Event list 2&lt;/sys_name&gt;&lt;sys_package display_value="CharityBids" source="x_1383184_charityb"&gt;bcaeeadb9369421094e3f15a7bba1090&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CharityBids"&gt;bcaeeadb9369421094e3f15a7bba1090&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_2db06d859332c21094e3f15a7bba10e4&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;lalitha&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-06-18 07:25:09&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="container"&gt;
  &lt;h1 class="head"&gt;Campaigns we love&lt;/h1&gt;
  &lt;h2 class="head2"&gt;
    Building Bridges, One Event at a Time
  &lt;/h2&gt;
  &lt;div id="events-grid" class="events-grid"&gt;
    &lt;div ng-repeat="event in c.data.events" class="event-card"&gt;
      &lt;a ng-href="#/event-details/{{event.id}}" class="event-link"&gt;
        &lt;img ng-src="{{event.image || 'https://dev203498.service-now.com/logo%20image.jpg'}}" alt="{{event.event_name}}"&gt;
        &lt;div class="event-details"&gt;
          &lt;div class="event-title"&gt;{{event.event_name}}&lt;/div&gt;
          &lt;div class="event-manager"&gt;Event Manager: {{event.event_manager}}&lt;/div&gt;
          &lt;div class="event-dates"&gt;
            &lt;div&gt;Start Date: {{event.start_date}}&lt;/div&gt;
            &lt;div&gt;End Date: {{event.end_date}}&lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="event-status"
               ng-class="{
                 'event-new': event.status === 'new',
                 'event-upcoming': event.status === 'upcoming',
                 'event-in-progress': event.status === 'in progress',
                 'event-completed': event.status === 'completed',
                 'event-canceled': event.status === 'canceled'
               }"&gt;
            Status: {{event.status}}
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1236270381</payload_hash>
        <record_name>Event list 2</record_name>
        <reverted_from/>
        <source>c0eb6f489326c61094e3f15a7bba1011</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>lalitha</sys_created_by>
        <sys_created_on>2024-06-18 07:25:09</sys_created_on>
        <sys_id>d1275b2693f2021094e3f15a7bba10b8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1902a3c3d3a0000001</sys_recorded_at>
        <sys_updated_by>lalitha</sys_updated_by>
        <sys_updated_on>2024-06-18 07:25:09</sys_updated_on>
        <type>Widget</type>
        <update_guid>9d275726b7f20210274a61254a4750a2</update_guid>
        <update_guid_history>9d275726b7f20210274a61254a4750a2:-1236270381,ed74798d6b72c210c713bf29bb452076:1162563937,ace035493772c2107baa5a536ed18306:817271939,812ee1853572c21072e73b73b4313383:-1034583134,05dda9858172c2106b14c6c91998cfa7:-1802329896,6f1d65c1e372c21039b686730e52c6dc:-1341994010,9d0d21854772c2108c310fc818ab3334:1035366630,0c4c65053f72c2107abff02ecce7ea39:-669591672,e71a2d410472c210962c918ef3d20b65:-1281324199,3f88a9014d72c210afce1e309324fcf3:1808287703,dd7729cdde32c210e1d059b2810054af:1216436617,f957e1cdfd32c21007f8ff742722b094:2140379415,7096ed0d4732c2104b5e809a7e0822f2:1228660343,6516ed0d6432c210be1a45864b7490f8:-1890423699,cb55214da232c210a8941cc0e8d45d52:787245344,a5b06d859a32c2105b441839e8c1d2e6:-999604837</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Event list 2">6e82a1979332c21094e3f15a7bba10e4</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>christy</sys_created_by>
        <sys_created_on>2024-06-20 06:51:08</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>206ceaffe85b42608fe60246c2146400</sys_id>
        <sys_metadata>2db06d859332c21094e3f15a7bba10e4</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Event list 2</sys_name>
        <sys_package display_value="CharityBids" source="x_1383184_charityb">bcaeeadb9369421094e3f15a7bba1090</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</sys_scope>
        <sys_scope_delete display_value="">29dae2f224af48ab9e59cb6ffa07ce11</sys_scope_delete>
        <sys_update_name>sp_widget_2db06d859332c21094e3f15a7bba10e4</sys_update_name>
        <sys_update_version display_value="sp_widget_2db06d859332c21094e3f15a7bba10e4">d1275b2693f2021094e3f15a7bba10b8</sys_update_version>
        <sys_updated_by>christy</sys_updated_by>
        <sys_updated_on>2024-06-20 06:51:08</sys_updated_on>
    </sys_metadata_delete>
</record_update>
