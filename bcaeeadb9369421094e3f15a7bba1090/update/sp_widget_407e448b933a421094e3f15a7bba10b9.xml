<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[// cb_bid_form.client.js
api.controller = function($rootScope, $scope, $http, spUtil) {
    var c = this;

    c.itemName = '';
    c.bidAmount = 0; // Initialize bid amount
    c.bidderName = '';
    c.bidderEmail = '';
    c.startBidAmount = '';
    c.highestBidAmount = '';

    $scope.$on('sp.update', function(event, args) {
        if (args.widget.id === 'cb_bid_form') {
            c.itemName = args.params.item_name;
            // Fetch bidder info (current user) and item info
            fetchBidderInfo();
            fetchItemInfo(args.params.item_name);
        }
    });

    c.submitBid = function() {
        // Ensure bidAmount is valid before submitting
        if ($scope.bidForm.$valid) {
            var requestBody = {
                bidder: gs.getUser().getID(),
                bid_amount: c.bidAmount,
                item_name: c.itemName
            };

            // Example using $http to submit bid (adjust as per your ServiceNow configuration)
            $http.post('/api/now/table/x_1383184_charityb_bid', requestBody).then(function(response) {
                // Handle success
                spUtil.addInfoMessage('Bid submitted successfully.');
                // Fetch bidder info again after successful bid submission
                fetchBidderInfo(); // Refresh bidder info (current user)
                // You can optionally broadcast an event to refresh the item details widget or update UI
                $rootScope.$broadcast('refreshItemDetails');
            }, function(error) {
                // Handle error
                spUtil.addErrorMessage('Failed to submit bid: ' + error.statusText);
            });
        }
    };

    function fetchBidderInfo() {
        // Fetch current user's details (bidder)
        c.bidderName = gs.getUser().getDisplayName(); // Assuming bidder's display name
        c.bidderEmail = gs.getUser().getEmail(); // Assuming bidder's email
    }

    function fetchItemInfo(itemName) {
        // Example: Fetch start bid amount and highest bid amount for the item
        var gr = new GlideRecord('x_1383184_charityb_item');
        gr.addQuery('item_name', itemName);
        gr.query(function() {
            if (gr.next()) {
                c.startBidAmount = gr.getValue('start_bid_amount');
                c.highestBidAmount = gr.getValue('highest_bid_amount');
            }
        });
    }
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>//Donator Field
.field-has-reference .add-on {
    vertical-align: middle;
    display: table-cell;
    width: 3.6rem;
    display: none;
}

span.field-decorations {
    display: none;
}

.vba167a0a932a421094e3f15a7bba1042 .btn-primary {
    background-color: #34829f;
}

.input-group-addon SELECT, .msie10 .input-group-addon SELECT, .msie11 .input-group-addon SELECT, .windows.chrome .input-group-addon SELECT {
    border: .1rem solid #939393;
    border-right: none;
    padding-left: 13px;
    border-radius: 20px 0px 0px 20px;
}

div.select2-container .select2-choice {
    padding-left: .8rem;
    display: flex;
    line-height: 3.2rem;
    align-items: center;
}

.btn-form-menu {
	vertical-align: inherit;
  padding: inherit;
  background: none;
}

label.field-label.field-label-question {
    color: #317a9e;
}

button.btn.btn-default {
    background: #34829f;
    display: flex;
    align-items: center;
}

.asterisk-div.ng-scope {
    display: none;
}

.vba167a0a932a421094e3f15a7bba1042 input#sp_formfield_number {
    border-radius: 2rem;
    border: 1px solid #327d9e;
}

legend, .sp-form-container .form-container-caption {
    border: none;
    color: inherit;
    display: inline-block;
    max-width: 100%;
    margin-bottom: 2.5rem;
    font-size: inherit;
    font-weight: normal;
}

.panel-title {
  word-wrap: break-word;
}

.panel-default {
    /* border-color: #ddd; */
    border: none;
    background: none;
  margin-top: -18px;
}

.form-control {
    display: block;
    width: 100%;
    height: 3.4rem;
	  border: 1px solid #327d9e;
    padding: .6rem 1.2rem;
    font-size: 1.4rem;
    line-height: 1.42857;
    color: #555555;
    background-color: #fff;
    background-image: none;
    border-radius: 20px;
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
}

input#sp_formfield_number {
    border-radius: 20px;
}

.field-has-reference {
    border-radius: 20px;
    table-layout: fixed;
    width: 100%;
    border: 1px solid #317b9e;
}

.select2-container .select2-choice .select2-arrow {
    background-color: transparent;
    border-left: .1rem solid #939393;
    display: none;
}

.field-has-reference .reference .select2-container a.select2-choice {
		height: 3.2rem;
    min-height: 3.2rem;
    background: none;
    border: none;
    display: flex;
    width: 31rem;
    border-radius: 2rem;
    align-items: center;
}

.panel-body {
    padding: 2.5rem;
    border: none;
    background: #fff;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
    border-radius: 22px;
  	left: 0px !important;
}

span#container_82d57a5b93a9421094e3f15a7bba10bd {
    font-size: 28px;
    color: #337f9f;
    font-weight: 600;
}



.panel-heading {
  .dropdown-menu {
    a {
      white-space: normal;
      display: flex;
      justify-content: space-between;
      .badge {
        align-self: baseline;
        min-width: auto;
      }
    }
  }
  display:none;
}

.sc-field-error-label {
  margin-right: .5em;
  display: inline-block;
  background-color: $sc-field-error-color;
}

.comment {
	font-weight: bold;
	margin-top: 2px;
	margin-bottom: 2px;
}

.action-btn {
  margin-right: 5px;
}

.timeline-container {
   max-height: 50vh;
   height: 100%;
   overflow-y: auto;
}

.panel .panel {
    height: auto !important;
}

.attachment-button {
  .glyphicon-paperclip {
    font-size: 18px;
  }
}

.empty-state-wrapper {
  width: 100%;
  height: 100%;
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: 10vh 20px 20px;

  .empty-state {
    border: 1px solid #e7e9eb;
    border-radius: 10px;
    max-width: 700px;
    padding: 30px 40px 20px;
    position: relative;

    .empty-state-badge {
      top: -36px;
      left: 50%;
      position: absolute;
      height: 72px;
      width: 72px;
      -webkit-align-items: center;
      -ms-flex-align: center;
      align-items: center;
      border-radius: 100%;
      color: #ffffff;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      font-size: 40px;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
      margin-left: -36px;
      text-align: center;
    }

    .empty-state-header {
      font-size: 30px;
      text-align: center;
      color: #343d47;
    }

    .empty-state-content {
      ul {
        list-style: disc outside;
        margin: 0 0 10px 0;
        padding: 0 0 0 30px;
      }
    }
  }
}

.text-success-alt {
	background-color: $state-success-text;
}

.text-info-alt {
	background-color: $state-info-text;
}

.sp-cross-scope-msg {
  margin-bottom: 10px;
}

.asterisk-div{
	margin: 2rem 0 1.5rem;
}

.asterisk{
	padding-right: .25rem;
}

.related-lists-vertical-bar{
	padding: 0 .5em;
}
.tox {
  .tox-statusbar {
    border-color : $input-border;
  }
  .tox-toolbar__primary {
    background: none;
    border-bottom: 1px solid $input-border;
  }
}
.tox.tox-tinymce {
  border-color: $input-border;
}


/* Styling for the button */
.btn {
  display: inline-block;
  padding: 10px 20px;
  font-size: 16px;
  font-weight: bold;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: 1px solid transparent;
  border-radius: 1.5rem;
  background-color: #007bff;
  color: #fff;
  cursor: pointer;
  transition: background-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
 
.btn-primary {
  background-color: #327f9f;
}
 
.btn-primary:hover {
  background-color: #fc9f50;
}
 
/* Styling for the disabled button */
.btn:disabled,
.btn[disabled] {
  cursor: not-allowed;
  opacity: 0.65;
  filter: alpha(opacity=65);
}

h1, .h1 {
    font-size: 4.6rem;
    text-align: left;
    font-weight: 600;
    color: transparent;
    background-image: radial-gradient(ellipse, #52c8ff, #1f827b);
    font-style: normal;
    -webkit-background-clip: text;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>cb_bid_form</id>
        <internal>false</internal>
        <link><![CDATA[function link(){
	setTimeout(function(){
	$('#adminMenu, #platformLink').tooltip();
});
}]]></link>
        <name>cb_bid_form</name>
        <option_schema>[{"name":"disableUIActions","section":"Behavior","label":"Disable UI Actions on Form","type":"boolean"},{"name":"showFormView","section":"Behavior","label":"Display current form view","type":"boolean"},{"name":"omitHeaderOptions","section":"Behavior","label":"Omit header options icon","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[// bid_form.server.js
// cb_bid_form.server.js
(function() {
    data.itemName = $sp.getParameter('item_name');
})();


// Assuming this is how you handle inserting a bid into your table
(function() {
    var user = gs.getUser();
    var gr = new GlideRecord('x_1383184_charityb_bid');
    gr.initialize();
    gr.bidder = user.getID();
    gr.bid_amount = data.bidAmount; // Make sure to properly retrieve bid amount from data
    gr.item_name = data.item_name;
    gr.insert();
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>christy</sys_created_by>
        <sys_created_on>2024-06-19 06:05:12</sys_created_on>
        <sys_id>407e448b933a421094e3f15a7bba10b9</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>cb_bid_form</sys_name>
        <sys_package display_value="CharityBids" source="x_1383184_charityb">bcaeeadb9369421094e3f15a7bba1090</sys_package>
        <sys_policy/>
        <sys_scope display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</sys_scope>
        <sys_update_name>sp_widget_407e448b933a421094e3f15a7bba10b9</sys_update_name>
        <sys_updated_by>lalitha</sys_updated_by>
        <sys_updated_on>2024-06-21 08:12:57</sys_updated_on>
        <template><![CDATA[<!-- cb_bid_form.html -->
<div class="bid-form">
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-name">Place Bid for {{ c.itemName }}</h4>
        </div>
        <div class="modal-body">
            <form name="bidForm" ng-submit="c.submitBid()">
                <div class="form-group">
                    <label for="bidAmount">Bid Amount:</label>
                    <input type="number" id="bidAmount" class="form-control" ng-model="c.bidAmount" required>
                </div>
                <button type="submit" class="btn btn-primary">Submit Bid</button>
            </form>
            <div>
                <hr>
                <h4>Bidder Information:</h4>
                <p><strong>Bidder Name:</strong> {{ c.bidderName }}</p>
                <p><strong>Bidder Email:</strong> {{ c.bidderEmail }}</p>
            </div>
            <div ng-if="c.startBidAmount && c.highestBidAmount">
                <hr>
                <h4>Item Information:</h4>
                <p><strong>Start Bid Amount:</strong> {{ c.startBidAmount }}</p>
                <p><strong>Highest Bid Amount:</strong> {{ c.highestBidAmount }}</p>
            </div>
        </div>
    </div>
</div>
]]></template>
    </sp_widget>
</record_update>
