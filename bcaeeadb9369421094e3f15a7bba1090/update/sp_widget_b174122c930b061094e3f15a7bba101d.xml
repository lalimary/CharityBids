<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, spUtil) {
    var c = this;

    // Initialize data.items
    c.data.items = c.data.items || [];

    // Function to handle placing a bid
    c.placeBid = function(item) {
        alert('Placing bid for: ' + item.item_name);
       
        spUtil.get('cb_bid_form', { itemSysId: item.sys_id }).then(function(response) {
            spUtil.addInfoMessage('Opening bid form...');
            spUtil.openWidget(response.data);
        });
    };

    // Function to show item details
    c.showDetails = function(item) {
        var itemDetailUrl = "?id=item_details&sys_id=" + item.sys_id;
        window.location.href = itemDetailUrl;
    };

    // Watch the items array for changes
    $scope.$watch(function() {
        return c.data.items;
    }, function(newVal) {
        if (newVal && newVal.length === 0) {
            $scope.noItemsMessage = "No items available";
        } else {
            $scope.noItemsMessage = "";
        }
    }, true);

    // Function to filter items based on the selected categories
    c.filterItems = function() {
        var selectedCategories = c.data.categoryArray.filter(category => category.selected).map(category => category.sys_id);
        var params = {
            selectedCategories: selectedCategories.join(',')
        };

        spUtil.get('cb_item_categories', params).then(function(response) {
            c.data.items = response.data.items;
            console.log('Items updated successfully:', response);
        }).catch(function(error) {
            console.error('Error updating items:', error);
        });
    };

    // Initial data fetch
    // c.filterItems();
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>/* General Styles */
body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    margin: 0;
    padding: 0;
    line-height: 1.6;
}

.item-card {
    height: 36rem;
    /* min-height: 10rem; */
}

.container {
    width: 90%;
    margin: 0 auto;
    padding-top: 20px;
}

h1 {
    text-align: center;
    margin-bottom: 20px;
    color: #333;
    //color: #33A5DF;
    font-size: 2.5em;
}

.container1 {
    display: flex;
    justify-content: center;
    margin-bottom: 30px;
}

.category {
    width: 100%;
    max-width: 300px;
}

.select {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: border-color 0.3s ease;
}

.select:focus {
    border-color: #007bff;
}

.items-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    width: -webkit-fill-available;
    justify-content: center;
    margin-top: 2rem;
}

.item-card {
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    width: calc(33.333% - 20px);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
    opacity: 0;
    animation: fadeIn 0.5s forwards, slideInBottom 0.5s forwards;
}

.item-card:hover {
   // transform: translateY(-5px);
   // box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
   transform: none;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideInBottom {
    from {
        transform: translateY(20px);
    }
    to {
        transform: translateY(0);
    }
}

.item-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-bottom: 1px solid #ddd;
    transition: transform 0.3s ease;
}

.item-card:hover img {
   // transform: scale(1.05);
   transform: none;
}

.item-details {
    padding: 15px;
}

.item-title {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 10px;
    color: #33A5DF;
    //color: #007bff;
}

.item-value,
.item-start-bid,
.item-highest-bid {
    font-size: 16px;
    margin-bottom: 5px;
}

.btn-primary {
    display: block;
    width: 100%;
    padding: 10px;
    text-align: center;
    background-color: #33A5DF;
    color: #fff;
    border: none;
    border-radius: 4px;
    text-decoration: none;
    transition: background-color 0.3s ease, color 0.3s ease;
    margin-top: 10px;
}

.btn-primary:hover {
    background-color: #0056b3;
}

.alert-warning {
    padding: 15px;
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
    color: #721c24;
    border-radius: 4px;
    text-align: center;
    margin: 20px 0;
    opacity: 0;
    animation: slideIn 0.5s forwards;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.btn-secondary {
    display: block;
    width: 100%;
    padding: 10px;
    text-align: center;
    background-color: #6c757d;
    color: #fff;
    border: none;
    border-radius: 4px;
    text-decoration: none;
    transition: background-color 0.3s ease, color 0.3s ease;
    margin-top: 10px;
}

.btn-secondary:hover {
    background-color: #5a6268;
}

/* Smooth scroll behavior for anchor links */
html {
    scroll-behavior: smooth;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>cb_item_categories</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Cb item categories</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function($sp, input, data, options, gs) {

    data.items = [];
    data.categoryArray = [];

    // Fetch all categories
    var categoryList = new GlideRecord('x_1383184_charityb_category');
    categoryList.query();
    while (categoryList.next()) {
        var catObj = {
            category: categoryList.getValue('category'),
            sys_id: categoryList.getUniqueValue(),
            selected: false
        };
        data.categoryArray.push(catObj);
    }

    input = input || {};
    gs.info('Input received: ' + JSON.stringify(input));

    // Fetch items based on selected categories
    var itemGR = new GlideRecord('x_1383184_charityb_item');
    itemGR.addQuery('auction_status', 'auction_in_progress');

    if (input.selectedCategories && input.selectedCategories !== '') {
        var categorySysIds = input.selectedCategories.split(',');
        var categoryQuery = itemGR.addQuery('category', categorySysIds[0]);
        for (var i = 1; i < categorySysIds.length; i++) {
            categoryQuery.addOrCondition('category', categorySysIds[i]);
        }
    }

    itemGR.query();
    while (itemGR.next()) {
        var donatorName = '';
        if (itemGR.donator) {
            var userGR = new GlideRecord('x_1383184_charityb_user_profile');
            if (userGR.get(itemGR.donator)) {
                donatorName = userGR.getValue('name');
            }
        }

        data.items.push({
            sys_id: itemGR.getUniqueValue(),
            item_name: itemGR.getValue('item_name'),
            category: itemGR.getValue('category'),
            donator: donatorName,
            start_date: itemGR.getValue('start_date'),
            end_date: itemGR.getValue('end_date'),
            value: itemGR.getValue('value'),
            start_bid_amount: itemGR.getValue('start_bid_amount'),
            highest_bid_amount: itemGR.getValue('highest_bid_amount'),
            auction_status: itemGR.getValue('auction_status'),
            image: itemGR.getDisplayValue('image'),
            description: itemGR.getValue('description')
        });
    }

    // Check if no items are found
    if (data.items.length === 0) {
        gs.info('No items found for categories: ' + input.selectedCategories);
        data.noItemsMessage = "No Items Available";
    } else {
        data.noItemsMessage = "";
    }

})($sp, input, data, options, gs);
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>lalitha</sys_created_by>
        <sys_created_on>2024-06-24 07:41:39</sys_created_on>
        <sys_id>b174122c930b061094e3f15a7bba101d</sys_id>
        <sys_mod_count>239</sys_mod_count>
        <sys_name>Cb item categories</sys_name>
        <sys_package display_value="CharityBids" source="x_1383184_charityb">bcaeeadb9369421094e3f15a7bba1090</sys_package>
        <sys_policy/>
        <sys_scope display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</sys_scope>
        <sys_update_name>sp_widget_b174122c930b061094e3f15a7bba101d</sys_update_name>
        <sys_updated_by>christy</sys_updated_by>
        <sys_updated_on>2024-06-27 15:50:43</sys_updated_on>
        <template><![CDATA[<div class="container">
    <h1>Exclusive Auctions</h1>
    <div class="container1">
        <div class="category">
            <div ng-repeat="category in c.data.categoryArray">
                <label>
                    <input type="checkbox" ng-model="category.selected" ng-change="c.filterItems()">
                    {{ category.category }}
                </label>
            </div>
        </div>
        <div id="items-grid" class="items-grid">
            <div ng-repeat="item in c.data.items" class="item-card">
                <img ng-src="{{item.image || 'https://dev203498.service-now.com/issues.png'}}" alt="{{item.item_name}}">
                <div class="item-details">
                    <div class="item-title">{{item.item_name}}</div>
                    <div class="item-value">Value: {{item.value}}</div>
                    <div class="item-value">Highest Bid: {{item.highest_bid_amount}}</div>
                    <div ng-if="item.auction_status === 'Auction Scheduled'" class="item-start-bid">Start Bid: {{item.start_bid_amount}}</div>
                    <!--<div ng-if="item.auction_status === 'Auction In Progress' || item.auction_status === 'Auction Completed'" class="item-highest-bid">Highest Bid: {{item.highest_bid_amount}}</div>-->
                    <a href="?id=item_details&sys_id={{item.sys_id}}" target="_blank" class="btn btn-primary">Details</a>
                    <button ng-if="item.auction_status === 'Auction In Progress'" class="btn btn-secondary" ng-click="c.placeBid(item)">Place Bid</button>
                </div>
            </div>
        </div>
        <div ng-if="c.data.noItemsMessage">
            {{ c.data.noItemsMessage }}
        </div>
    </div>
</div>
]]></template>
    </sp_widget>
</record_update>
