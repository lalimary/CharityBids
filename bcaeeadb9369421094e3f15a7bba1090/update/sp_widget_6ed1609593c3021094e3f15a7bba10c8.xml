<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, spUtil) {
    var c = this;

    // Initialize data.items and selectedItem
    c.data = {};
    c.data.items = [];
    c.selectedItem = null;

    // Function to show item details and fetch previous bids
    c.showDetails = function(item) {
        c.selectedItem = item;
        c.fetchPreviousBids(item);
        // Optionally, toggle a flag to control the display of item details
        item.showDetails = true; // Show the details for this item
    };

    // Function to close the details
    c.closeModal = function() {
        c.selectedItem = null;
        // Optionally hide details on mouse leave
        // For now, it's handled by the CSS transition and hover states
    };

    // Function to fetch previous bids for the selected item
    c.fetchPreviousBids = function(item) {
        // Replace with your actual API call or logic to fetch previous bids
        // Example using spUtil.get as placeholder
        spUtil.get('previous_bids', { item_id: item.id }).then(function(response) {
            item.previousBids = response.data.previousBids;
            console.log('Previous bids fetched successfully:', response);
        }).catch(function(error) {
            console.error('Error fetching previous bids:', error);
        });
    };

    // Initial data fetch
    spUtil.get('my_bid_history').then(function(response) {
        c.data.items = response.data.items;
        console.log('Items fetched successfully:', response);
    }).catch(function(error) {
        console.error('Error fetching items:', error);
    });
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

h1 {
    text-align: center;
    margin-bottom: 20px;
    font-size: 2.5em;
    color: #333;
}

#items-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
}

.item-card {
  position: relative;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  width: 300px;
  height: 250px; /* Increased height to accommodate slide effect */
  cursor: pointer;
  transition: transform 0.2s;
}

.item-card:hover {
  transform: scale(1.05);
}

.item-card img {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.item-content {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background-color: #fff;
  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);
  padding: 15px;
  transition: bottom 0.3s ease;
  z-index: 1; /* Ensure content is above the sliding section */
}

.item-details-slide {
  position: absolute;
  bottom: -100%;
  left: 0;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.9); /* Transparent white background */
  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);
  padding: 15px;
  transition: bottom 0.3s ease, opacity 0.3s ease; /* Add opacity transition */
  opacity: 0; /* Initially transparent */
}

.item-card:hover .item-details-slide {
  bottom: 0;
  z-index: 10;
  opacity: 1; /* Slide up and become opaque on hover */
}

.item-details-slide ul {
  list-style-type: none;
  padding: 0;
}

.item-details-slide li {
  margin-bottom: 5px;
  color: #333;
}


.item-title {
    font-size: 1.5em;
    margin-bottom: 10px;
    color: #333;
}

.item-bid-amount {
    font-size: 1.2em;
    color: #555;
    display: flex;
    align-items: center;
}

.item-bid-amount i {
    margin-right: 5px;
    color: #e67e22;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>my_bid_history</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>My bid history</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function($sp, input, data, options, gs) {
    data.items = [];
    var userID = gs.getUserID();
    var userProfileID = '';

    // Fetch the user profile record associated with the logged-in user
    var userProfileGR = new GlideRecord('x_1383184_charityb_user_profile');
    userProfileGR.addQuery('name', userID);
    userProfileGR.query();
    if (userProfileGR.next()) {
        userProfileID = userProfileGR.getUniqueValue();
    } else {
        gs.info('No user profile found for user: ' + userID);
        data.noItemsMessage = "No Items Available";
        return;
    }

    // Fetch all bids based on user profile
    var bidGR = new GlideRecord('x_1383184_charityb_bid');
    bidGR.addQuery('x_1383184_charityb_bidder', userProfileID);
    bidGR.orderBy('bid_amount', 'DESC'); // Order bids by bid_amount descending

    bidGR.query();

    var highestBidMap = {}; // Map to store highest bids for each item

    while (bidGR.next()) {
        var itemGR = new GlideRecord('x_1383184_charityb_item');
        if (itemGR.get(bidGR.getValue('item_name'))) {
            var itemName = itemGR.getValue('item_name');
            if (!highestBidMap[itemName]) {
                highestBidMap[itemName] = {
                    item_name: itemName,
                    bid_amount: bidGR.getValue('bid_amount'),
                    image: itemGR.getDisplayValue('image'),
                    previousBids: [] // Initialize array to store previous bids
                };
            }

            // Check if the current bid is made by the current user
            if (bidGR.getValue('x_1383184_charityb_bidder') === userProfileID) {
                // Add previous bid to the array
                highestBidMap[itemName].previousBids.push({
                    bid_amount: bidGR.getValue('bid_amount')
                });
            }

            // Update highest bid amount if necessary
            if (bidGR.getValue('bid_amount') > highestBidMap[itemName].bid_amount) {
                highestBidMap[itemName].bid_amount = bidGR.getValue('bid_amount');
            }
        } else {
            gs.info('Item not found for bid: ' + bidGR.getValue('sys_id'));
        }
    }

    // Populate data.items with highest bids including previous bids by the current user
    for (var itemName in highestBidMap) {
        if (highestBidMap.hasOwnProperty(itemName)) {
            data.items.push(highestBidMap[itemName]);
        }
    }

    // Check if no items are found
    if (data.items.length === 0) {
        gs.info('No items found for user profile: ' + userProfileID);
        data.noItemsMessage = "No Items Available";
    } else {
        data.noItemsMessage = "";
    }

})($sp, input, data, options, gs);
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>lalitha</sys_created_by>
        <sys_created_on>2024-06-26 07:16:21</sys_created_on>
        <sys_id>6ed1609593c3021094e3f15a7bba10c8</sys_id>
        <sys_mod_count>84</sys_mod_count>
        <sys_name>My bid history</sys_name>
        <sys_package display_value="CharityBids" source="x_1383184_charityb">bcaeeadb9369421094e3f15a7bba1090</sys_package>
        <sys_policy/>
        <sys_scope display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</sys_scope>
        <sys_update_name>sp_widget_6ed1609593c3021094e3f15a7bba10c8</sys_update_name>
        <sys_updated_by>christy</sys_updated_by>
        <sys_updated_on>2024-07-22 10:44:06</sys_updated_on>
        <template><![CDATA[<!DOCTYPE html>
<html ng-app="charityApp">

<head>
    <meta charset="UTF-8">
    <title>My Bids</title>
    <link rel="stylesheet" href="styles.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  </head>
  <body>


<h1>
  My Bids </h1>
    <div id="items-grid" class="items-grid">
  <div ng-repeat="item in c.data.items" class="item-card">
    <img ng-src="{{item.image || 'https://dev203498.service-now.com/logo%20image.jpg'}}" alt="{{item.item_name}}">
    
    <div class="item-content">
      <div class="item-title">{{item.item_name}}</div>
      <div class="item-bid-amount">
        <i class="fas fa-tag"></i> Latest Bid Amount: {{item.bid_amount}}
      </div>
    </div>
    
    <div class="item-details-slide">
      <h3>Previous Bids</h3>
      <ul>
        <li ng-repeat="bid in item.previousBids">
          Bid Amount: {{bid.bid_amount}}
        </li>
      </ul>
    </div>
  </div>
</div>

</body>

</html>
]]></template>
    </sp_widget>
</record_update>
