<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {  /* widget controller */  var c = this;};]]></client_script>
        <controller_as>c</controller_as>
        <css>body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f7f9fc;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

h1 {
    text-align: center;
    margin-bottom: 40px;
    font-size: 36px;
    color: #333;
    text-transform: uppercase;
    letter-spacing: 1.5px;
}

.search-input {
    display: block;
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 8px;
}

.events-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 20px;
}

.event-card {
    position: relative;
    border: none;
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    /* Removed transition for hover effects */
}

.event-image {
    position: relative;
    height: 200px;
    background-size: cover;
    background-position: center;
    filter: blur(8px);
    z-index: 0;
}

.event-date {
    position: absolute;
    top: 10px;
    left: 10px;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 8px;
    padding: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.event-month {
    font-size: 14px;
    color: #888;
    font-weight: bold;
}

.event-day {
    font-size: 20px;
    color: #333;
}

.end-date-label {
    font-size: 12px;
    color: #888;
    margin-top: 5px;
    text-align: center;
    font-weight: bold;
}

.event-content {
    position: relative;
    z-index: 1;
    background: rgba(255, 255, 255, 0.8);
    padding: 20px;
    border-radius: 12px;
    margin-top: -50px;
    text-align: center;
}

.event-title {
    font-size: 22px;
    margin-bottom: 5px;
    color: #333;
    font-weight: bold;
}

.event-description {
    font-size: 16px;
    color: #555;
    margin-bottom: 20px;
    word-wrap: break-word;
    display: block; /* Ensure event manager is always visible */
}

.event-status {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    margin-top: 10px;
}

.event-status-icon {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 10px;
}

.event-status-icon i {
    font-size: 18px; /* Adjust icon size */
}

.event-status-text {
    font-size: 14px;
    color: #888;
}

.event-status-icon.in-progress {
    background-color: #5cb85c; /* Green for 'In Progress' */
    color: #fff;
}

.event-status-icon.schedule {
    background-color: #428bca; /* Blue for 'Scheduled' */
    color: #fff;
}

.event-status-icon.completed {
    background-color: #d9534f; /* Red for 'Completed' */
    color: #fff;
}

.event-closed-msg {
    font-size: 16px;
    color: #999;
    margin-top: 10px;
    text-align: center;
}

.donation-options {
    margin-top: 20px;
    text-align: center;
}

.donation-options .donateButton {
    display: inline-block;
    margin: 5px;
    padding: 10px 20px;
    border: 2px solid #007bff; /* Blue outline */
    color: #007bff;
    text-decoration: none;
    border-radius: 8px;
    transition: background-color 0.3s, color 0.3s;
}

.donation-options a:hover {
    background-color: #007bff;
    color: #fff;
}

.event-closed.ng-scope {
    padding-top: 24px;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>justgiving_test</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Justgiving test</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  // Define the endpoint URL
  var url = 'https://api.staging.justgiving.com/c89bbb1c/v1/event/types';
 
  // Create a REST message
  var request = new sn_ws.RESTMessageV2();
  request.setEndpoint(url);
  request.setHttpMethod('GET');
  request.setRequestHeader('Accept', 'application/json');
 
  // Execute the request and get the response
  var response = request.execute();
  var responseBody = response.getBody();
  var httpStatus = response.getStatusCode();
	data.events =[];
  // Check if the request was successful (HTTP status 200)
  if (httpStatus === 200) {
    try {
      // Parse the JSON response
      var responseObj = JSON.parse(responseBody);
 
      if (responseObj.eventTypes && Array.isArray(responseObj.eventTypes)) {
        var eventNames = []; // Array to store names of events already inserted
 
        // Initialize GlideRecord for x_1383184_charityb_events table
        var eventRecord = new GlideRecord('x_1383184_charityb_events');
 
        responseObj.eventTypes.forEach(function(eventType) {
          // Check if the event name already exists in the table
          eventRecord.addQuery('event_type', eventType.name);
          eventRecord.query();
 
         if (!eventRecord.hasNext()) { // If event does not already exist
            // Insert the event into the ServiceNow table
            eventRecord.initialize(); // Initialize a new record for insertion
            eventRecord.event_type = eventType.name; // Corrected assignment
            //eventRecord.description = eventType.description;
            var eventId = eventRecord.insert();
					  data.events.push({eventsys:eventRecord.getUniqueValue()});
            gs.info('Inserted event with ID: ' + eventId);
          }
 
          // Store the event name in the array to avoid duplicate inserts
          eventNames.push(eventType.name);
        });
 
        // Now populate data.activities with all events (including existing ones)
        data.activities = responseObj.eventTypes.map(function(eventType) {
          return {
            id: eventType.id,
            name: eventType.name,
            description: eventType.description,
          };
        });
      } else {
        gs.addInfoMessage("No event types available");
        data.activities = [];
      }
    } catch (e) {
      gs.addErrorMessage("Error parsing JSON response: " + e.message);
      data.activities = [];
    }
  } else {
    gs.addErrorMessage("Failed to fetch activities. HTTP Status: " + httpStatus);
    data.activities = [];
  }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>christy</sys_created_by>
        <sys_created_on>2024-07-17 05:23:47</sys_created_on>
        <sys_id>5a71dc449363021094e3f15a7bba1078</sys_id>
        <sys_mod_count>59</sys_mod_count>
        <sys_name>Justgiving test</sys_name>
        <sys_package display_value="CharityBids" source="x_1383184_charityb">bcaeeadb9369421094e3f15a7bba1090</sys_package>
        <sys_policy/>
        <sys_scope display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</sys_scope>
        <sys_update_name>sp_widget_5a71dc449363021094e3f15a7bba1078</sys_update_name>
        <sys_updated_by>christy</sys_updated_by>
        <sys_updated_on>2024-07-20 04:33:11</sys_updated_on>
        <template><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Justgiving Events</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="styles.css">
</head>
<body ng-controller="EventController as c">
<div class="container">
<h1>Justgiving Events</h1>
<input type="text" ng-model="searchQuery" placeholder="Search events..." class="search-input">
<div class="events-grid">
<div class="event-card" ng-repeat="activity in c.data.activities | filter:searchQuery" ng-click="openEventDetails(activity.sys_id)">
<a ng-href="?id=justgiving_event_details&sys_id={{c.data.events[activity.id-1].eventsys}}" target="_blank" class="event-card-link">>
<!--<h2>ID: {{ c.data.events[activity.id].eventsys }}</h2>-->
<h2>{{ activity.name }}</h2>
<p>Description: {{ activity.description }}</p>
<!--<p>Location: {{ activity.location }}</p>-->
<button ng-click="redirectToDetailsPage(activity.id)">Create Fundraising Events</button></a>
<hr/>
</div>
<div ng-if="!c.data.activities.length" class="alert alert-warning">No events available</div>
</div>
</div>
 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.2/angular.min.js"></script>
<script src="client.js"></script>
</body>
</html>]]></template>
    </sp_widget>
</record_update>
