<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_header_footer">
    <sp_header_footer action="INSERT_OR_UPDATE">
        <category>standard</category>
        <client_script><![CDATA[api.controller = function ($rootScope, $scope, snRecordWatcher, spUtil, $location, $uibModal, cabrillo, $timeout, $window, i18n, $injector) {

    $scope.logoText = i18n.format(i18n.getMessage('Go to {0} Homepage'), $scope.portal.title);

    $scope.collapse = function() {
        $rootScope.$emit('sp-navbar-collapse');
    }

    $scope.avatarProfile = {
        userID: $scope.user.sys_id,
        name: $scope.user.name,
        initials: $window.NOW.user_initials
    };

    if ($window.NOW.user_avatar) {
        $scope.avatarProfile.userImage = $window.NOW.user_avatar;
    }

    if (cabrillo.isNative()) {
        if ($window.innerWidth < 767) {
            $scope.isViewNative = true;
        } else {
            $scope.isViewNativeTablet = true;
        }
    }

    $scope.openPopUp = function() {
        var url = "$chat_support.do?queueID=" + $scope.data.connect_support_queue_id;
        var popup = window.open (url, "popup", "width=900, height=600");
    };

    $scope.openLogin = function () {
        $scope.modalInstance = $uibModal.open({
            templateUrl: 'modalLogin',
            scope: $scope
        });

        var pageRoot = angular.element('.sp-page-root');
        $scope.modalInstance.rendered.then(function() {
            var $uibModalStack = $injector.get('$uibModalStack');
            var modalObj = $uibModalStack.getTop();
            var modal = modalObj.value.modalDomEl;

            modal.attr('aria-label', modal.find('.panel-title').html());
            modal.attr('aria-modal', 'true');
            pageRoot.attr('aria-hidden', 'true');
        });

        $scope.modalInstance.closed.then(function() {
            pageRoot.attr('aria-hidden', 'false');
        });
    };

    var mdScreenSize = isMDScreenSize();
    $scope.showSMAvatar = isMDScreenSize();
    $scope.showAvatar = !isMDScreenSize();

    $scope.isAgentChatConfigured = g_has_agent_chat_config;

    angular.element($window).on('resize', function () {
        if(mdScreenSize !== isMDScreenSize() && (!$scope.showSMAvatar || !$scope.showAvatar)){
            $scope.showSMAvatar = true;
            $scope.showAvatar = true;
        }
    });

    function isMDScreenSize() {
        return $window.matchMedia('(max-width: 992px)').matches;
    }

    $rootScope.$on('sp.avatar_changed', function(evt, obj) {
        $scope.userID = "";
        $scope.newAvatarId = obj.newAvatarId;
        $timeout(function(){
            $scope.userID = $scope.user.sys_id;
            $("#profile-dropdown .sub-avatar").css("background-image", 'url("' + $scope.newAvatarId + '.iix?t=small")');
        });
    });

    $scope.isHomepage = function() {
        if (!$scope.page.id)
            return true;

        if ($scope.page.id == $scope.portal.homepage_dv)
            return true;

        return false;
    };

}
]]></client_script>
        <controller_as>c</controller_as>
        <css>/* General styling */&#13;
body {&#13;
    font-family: Arial, sans-serif;&#13;
    margin: 0;&#13;
    padding: 0;&#13;
}&#13;
&#13;
/* Header and Navigation Bar */&#13;
.navbar-inverse {&#13;
    background-color: #fff;&#13;
    border: none;&#13;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);&#13;
}&#13;
&#13;
.navbar-inverse .navbar-header .navbar-brand,&#13;
.navbar-inverse .navbar-nav &gt; li &gt; a {&#13;
    color: #000;&#13;
    font-weight: bold;&#13;
}&#13;
&#13;
/* Logo styling */&#13;
.navbar-brand-logo img {&#13;
    height: 40px;&#13;
}&#13;
&#13;
/* Navbar toggle button */&#13;
.navbar-toggle {&#13;
    border: none;&#13;
    background-color: transparent;&#13;
}&#13;
&#13;
.navbar-toggle .icon-bar {&#13;
    background-color: #000;&#13;
}&#13;
&#13;
/* Navbar links */&#13;
.navbar-nav &gt; li {&#13;
    position: relative;&#13;
}&#13;
&#13;
.navbar-nav &gt; li &gt; a {&#13;
    padding: 15px 20px;&#13;
    color: #000;&#13;
    font-weight: bold;&#13;
}&#13;
&#13;
.navbar-nav &gt; li &gt; a:hover,&#13;
.navbar-nav &gt; li &gt; a:focus {&#13;
    background-color: #f1f1f1;&#13;
    color: #000;&#13;
}&#13;
&#13;
/* Dropdown menu */&#13;
.navbar-nav .dropdown-menu {&#13;
    display: none;&#13;
    position: absolute;&#13;
    background-color: #fff;&#13;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);&#13;
    min-width: 160px;&#13;
    z-index: 1;&#13;
}&#13;
&#13;
.navbar-nav .dropdown-menu &gt; li &gt; a {&#13;
    padding: 12px 16px;&#13;
    color: #000;&#13;
}&#13;
&#13;
.navbar-nav .dropdown-menu &gt; li &gt; a:hover,&#13;
.navbar-nav .dropdown-menu &gt; li &gt; a:focus {&#13;
    background-color: #f1f1f1;&#13;
}&#13;
&#13;
/* Show dropdown menu on hover */&#13;
.navbar-nav &gt; li:hover .dropdown-menu {&#13;
    display: block;&#13;
}&#13;
&#13;
/* Avatar and profile dropdown */&#13;
.navbar-avatar {&#13;
    display: inline-block;&#13;
    margin-right: 10px;&#13;
}&#13;
&#13;
.dropdown-menu[aria-label*="profile"] {&#13;
    left: auto;&#13;
    right: 0;&#13;
}&#13;
&#13;
.hidden-xs.hidden-sm.dropdown .dropdown-menu {&#13;
    left: auto;&#13;
    right: 0;&#13;
}&#13;
&#13;
/* Mobile view adjustments */&#13;
@media (max-width: 767px) {&#13;
    .navbar-header {&#13;
        display: flex;&#13;
        justify-content: space-between;&#13;
    }&#13;
&#13;
    .navbar-toggle {&#13;
        margin-right: 10px;&#13;
    }&#13;
&#13;
    .navbar-nav {&#13;
        display: none;&#13;
        width: 100%;&#13;
    }&#13;
&#13;
    .navbar-nav &gt; li {&#13;
        display: block;&#13;
        width: 100%;&#13;
    }&#13;
&#13;
    .navbar-nav &gt; li &gt; a {&#13;
        padding: 10px 15px;&#13;
    }&#13;
&#13;
    .navbar-nav &gt; li &gt; .dropdown-menu {&#13;
        position: static;&#13;
        box-shadow: none;&#13;
    }&#13;
&#13;
    .navbar-nav &gt; li:hover .dropdown-menu {&#13;
        display: block;&#13;
    }&#13;
&#13;
    .collapse.in {&#13;
        display: block !important;&#13;
    }&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element) {
	var prevFocusIndex = -1;// This is used for prev focus of nav-bar(avatar) drop down items when its visible.
	var KEY = {
		TAB : 9,
		ENTER : 13,
		ESC : 27,
		SPACE_BAR : 32,
		LEFT : 37,
		UP : 38,
		RIGHT : 39,
		DOWN : 40
	}
	
	function isMDScreenSize() {
		return window.matchMedia('(max-width: 992px)').matches;
	}
	
	var navbarContainer = $('#sp-nav-bar');
	navbarContainer.on('shown.bs.collapse', function () {
		$('a:visible', navbarContainer).first().focus();
	});
	
	$(document).keyup(function(event) {
		var mdScreenSize = isMDScreenSize();
		if (event.which == KEY.TAB || event.which == KEY.LEFT || event.which == KEY.RIGHT) { //tab key handler + arrow keys
			if (!mdScreenSize && $(event.target).parents(".dropdown-menu").length == 0) { //if we are NOT inside a dropdown...
				//close the dropdowns
				$(".dropdown.open", $(element)).removeClass("open");
				$("[data-toggle='dropdown']", $(element)).attr("aria-expanded", "false");
				prevFocusIndex = -1;
			}
		} else if(event.which == KEY.UP || event.which == KEY.DOWN) {
			var parent = $(event.target).parents('.dropdown-menu');
			
			// To support custom drop downs like cart and wish list.
			if (parent.hasClass('custom-drop-down')) return;
			
			if (parent.length) {
				var items = $(parent).find('li a, li button');
				if (!items.length)
					return;

				var index = items.index(items.filter(':focus'));
				if(index == -1) return;
				
				if (prevFocusIndex == index) {
					if (index == 0)
						index = items.length - 1;
					else if (index == items.length - 1)
						index = 0;
						
						items[index].focus();
				} else if (event.which == KEY.UP && index == 0 && prevFocusIndex == -1) { // to handle newly opened dropdown on keyup
					index = items.length - 1;
					items[index].focus();
				}
				prevFocusIndex = index;
			
			} else {
				// Upon down/up arrow key event from the menu target element,
        // focus the first/last menu item to be consistent with click behavior and conform to standard menubar pattern below
				// https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html
				if ($(event.target).is('[data-toggle="dropdown"]')) {
					var parent = $(event.target).parent().find('.dropdown-menu');
					
					// To support custom drop downs like cart and wish list.
					if (parent.hasClass('custom-drop-down')) return;
					
					var items = $(parent).find('li a, li button');
					if (!items.length) return;
					
					var index = -1;
					if(event.which == KEY.DOWN) //down
						index = 0;
					else if(event.which == KEY.UP) //up
						index = items.length > 0 ? items.length-1 : 0;
					
					items[index].focus();
					prevFocusIndex = index;
					
				}		
			}
		}
		// on esc/close of the menu, reset the index
		if(event.which == KEY.ESC) {
			prevFocusIndex = -1;
			if (mdScreenSize && $('.navbar-right').attr("aria-expanded")) {
				closeMobileMenu();
				
				if ($(event.target).parents(".navbar-right").length > 0)
					$('.navbar-toggle').focus();
			}
		}
		
		if (event.which == KEY.ENTER || event.which == KEY.SPACE_BAR)
			$(event.target).parent(".dropdown.open").find("ul.dropdown-menu li:first-child a").focus();
	});

	$(element).on('click.nav','.navbar-collapse.in',function(e) {
		var target = $(e.target);
		if (target.is('a')) {
			if (target.hasClass('sp-menu-has-items'))
				return; // menu item has a submenu, so just toggle it

			// collapse mobile nav if clicked an anchor
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		if (target.parent().hasClass("toggle-dropdown")) {
			// collapse mobile nav if parent has toggle-dropdown class
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		// if neither target nor parent is an anchor, do nothing
		if (!target.parent().is('a'))
			return;

		// collapse mobile nav if target is part of a submenu
		if (target.parents("ul.dropdown-menu").length > 0)
			$(this).removeClass('in').addClass('collapse');
	});

	// clicking outside the mobile menu should close the mobile menu
	$(document).on('click', function(e) {
		var target = $(e.target);
		if (target.parents('.navbar-right').length == 0) {
			closeMobileMenu();
		}
	});
	
	// Close the mobile menu when focus goes out of the menu
	$('.navbar-right').on('keydown', 'a', function(event) {
		if (($(this).is($('.navbar-right a').last()) && event.which == KEY.TAB && !event.shiftKey) || ($(this).is($('.navbar-right a').first()) && event.which == KEY.TAB && event.shiftKey)) {
			closeMobileMenu();
			setTimeout(function () {
				window.scrollBy(0,-200);
			});
		}
	});
	
	function closeMobileMenu() {
		$('.navbar-right').collapse('hide');
	}
}]]></link>
        <name>Charity Bids Header</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[// Defines the support queue ID that will be linked to by the Live Chat link in header
data.connect_support_queue_id = $sp.getValue('sp_chat_queue');
data.login_page = $sp.getValue('login_page');
data.profileBtnMsg = gs.getMessage("User options");
data.toggleMsg = gs.getMessage("Toggle navigation");
var menu = $sp.getValue("sp_rectangle_menu");
data.menu = $sp.getWidgetFromInstance(menu);

// If data.menu exists and contains data
if (data.menu && data.menu.data) {
    // Replace data.menu.data
    data.menu.data.replace = true;

    // Initialize data.hasLogin as false
    data.hasLogin = false;

    // Initialize data.hasMenuItems and check if menu has items
    data.hasMenuItems = data.menu.data.menu.items && data.menu.data.menu.items.length > 0;

    // Loop through menu items to check for login link
    for (var i = 0; i < data.menu.data.menu.items.length; i++) {
        var item = data.menu.data.menu.items[i];
        if (item.type == 'page' && item.sp_page == data.login_page) {
            data.hasLogin = true;
            break; // Exit loop if login link is found
        }
    }
}

// Get login widget
data.loginWidget = $sp.getWidgetFromInstance('login-modal');
]]></script>
        <servicenow>false</servicenow>
        <static>false</static>
        <sys_class_name>sp_header_footer</sys_class_name>
        <sys_created_by>christy</sys_created_by>
        <sys_created_on>2024-05-30 06:21:19</sys_created_on>
        <sys_id>4d5291649366021094e3f15a7bba1004</sys_id>
        <sys_mod_count>50</sys_mod_count>
        <sys_name>Charity Bids Header</sys_name>
        <sys_package display_value="CharityBids" source="x_1383184_charityb">bcaeeadb9369421094e3f15a7bba1090</sys_package>
        <sys_policy/>
        <sys_scope display_value="CharityBids">bcaeeadb9369421094e3f15a7bba1090</sys_scope>
        <sys_update_name>sp_header_footer_4d5291649366021094e3f15a7bba1004</sys_update_name>
        <sys_updated_by>lalitha</sys_updated_by>
        <sys_updated_on>2024-06-26 09:16:51</sys_updated_on>
        <template><![CDATA[<div>
  <nav class="navbar-inverse" ng-class="::{'navbar':!isViewNative, 'is-native': isViewNative}"
       role="navigation" aria-label="${Primary}">
    <div ng-show="::!isViewNative" class="navbar-header">
      <a class="navbar-brand" ng-if="::!portal.logo" href="?id={{::portal.homepage_dv}}"><span ng-bind="portal.title"></span></a>
      <a class="navbar-brand navbar-brand-logo" ng-if="::portal.logo" ng-href="?id={{::portal.homepage_dv}}" ng-click="collapse()" aria-label="{{::logoText}}">
        <img ng-src="{{::portal.logo}}" title="{{::portal.title}}" alt="{{::portal.title}} ${Logo}" />
      </a>
      <button ng-if="data.hasMenuItems || (!user.logged_in && page.id != portal.login_page_dv && !data.hasLogin) || user.logged_in" type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-placement="bottom" data-toggle-second="tooltip" data-original-title="{{::data.toggleMsg}}" data-target="#sp-nav-bar" aria-haspopup="menu">
        <span class="sr-only">${Toggle navigation}</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
    </div>

    <div sp-navbar-toggle="" class="collapse navbar-right" id="sp-nav-bar">
      <!-- Include The Menu -->
      <sp-widget widget="::data.menu"></sp-widget>
      <!-- Language Selector Menu -->
      <sp-widget widget="::data.langSelector"></sp-widget>
      <ul ng-if="(!user.logged_in && page.id != portal.login_page_dv && !data.hasLogin)" class="nav navbar-nav" role="presentation">
        <li role="presentation"><a href ng-click="::openLogin()">${Login}</a></li>
      </ul>
      <ul ng-if="user.logged_in" class="nav navbar-nav" role="menubar">
        <!-- chat, avatar, and logout -->
        <li ng-if="::(data.connect_support_queue_id && !isAgentChatConfigured)" role="presentation"><a href ng-click="openPopUp()" role="menuitem">${Live Chat}</a></li>
        <li ng-if="showAvatar" class="hidden-xs hidden-sm dropdown" role="presentation">
          <a href class="toggle-dropdown" data-toggle="dropdown" aria-expanded="false" aria-label="{{::data.profileBtnMsg}}: {{::user.name}}" id="profile-dropdown"  role="menuitem" aria-haspopup="true">
            <span class="navbar-avatar" aria-hidden="true"><sn-avatar class="avatar-small-medium" primary="avatarProfile" /></span>
            <span class="visible-lg-inline">{{::user.name}}</span>
          </a>
          <ul class="dropdown-menu" role="menu" aria-label="{{::data.profileBtnMsg}}">
            <li role="presentation"><a tabindex="-1" ng-href="?id=profile&sys_id={{::user.sys_id}}" role="menuitem">${Profile}</a></li>
            <li ng-if="::!(isViewNative || isViewNativeTablet)" role="presentation"><a tabindex="-1" href="{{::portal.logoutUrl}}" role="menuitem">${Logout}</a></li>
          </ul>
        </li>
        <li ng-if="showSMAvatar" class="visible-xs-block visible-sm-block" role="presentation"><a role="menuitem" ng-href="?id=profile&sys_id={{::user.sys_id}}" ng-click="collapse()">
          <span class="navbar-avatar"><sn-avatar class="avatar-small-medium" primary="avatarProfile" /></span>{{::user.name}}</a>
        </li>
        <li ng-if="::!(isViewNative || isViewNativeTablet)" class="visible-xs-block visible-sm-block" role="presentation"><a role="menuitem" ng-href="{{::portal.logoutUrl}}" ng-click="collapse()">${Logout}</a></li>
      </ul>
    </div>
  </nav>
</div>]]></template>
    </sp_header_footer>
</record_update>
